import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.Set;

public class CsvRowComparer {
    public static void main(String[] args) {
        String csvFile1 = "path/to/csv1.csv";
        String csvFile2 = "path/to/csv2.csv";
        String outputFile1 = "csv1_not_in_csv2.txt";
        String outputFile2 = "csv2_not_in_csv1.txt";

        Set<String> csv1Rows = new HashSet<>();
        Set<String> csv2Rows = new HashSet<>();

        // Read CSV 1 and store rows in a set
        try (BufferedReader br = new BufferedReader(new FileReader(csvFile1))) {
            String line;
            while ((line = br.readLine()) != null) {
                csv1Rows.add(line.trim());
            }
        } catch (IOException e) {
            System.err.println("Error reading " + csvFile1 + ": " + e.getMessage());
        }

        // Read CSV 2 and store rows in a set
        try (BufferedReader br = new BufferedReader(new FileReader(csvFile2))) {
            String line;
            while ((line = br.readLine()) != null) {
                csv2Rows.add(line.trim());
            }
        } catch (IOException e) {
            System.err.println("Error reading " + csvFile2 + ": " + e.getMessage());
        }

        StringBuilder result1 = new StringBuilder();
        StringBuilder result2 = new StringBuilder();

        // Compare rows from CSV 1 to CSV 2
        result1.append("Rows in ").append(csvFile1).append(" not found in ").append(csvFile2).append(":\n");
        for (String row : csv1Rows) {
            if (!csv2Rows.contains(row)) {
                result1.append(row).append("\n");
                System.out.println("Row from " + csvFile1 + " not found in " + csvFile2 + ": " + row);
            }
        }

        // Compare rows from CSV 2 to CSV 1
        result2.append("Rows in ").append(csvFile2).append(" not found in ").append(csvFile1).append(":\n");
        for (String row : csv2Rows) {
            if (!csv1Rows.contains(row)) {
                result2.append(row).append("\n");
                System.out.println("Row from " + csvFile2 + " not found in " + csvFile1 + ": " + row);
            }
        }

        // Write the results to separate text files
        int count1 = writeToFile(outputFile1, result1.toString());
        int count2 = writeToFile(outputFile2, result2.toString());

        // Print the counts of total lines in each output file
        System.out.println("Total lines in " + outputFile1 + ": " + count1);
        System.out.println("Total lines in " + outputFile2 + ": " + count2);
    }

    private static int writeToFile(String outputFile, String content) {
        int count = 0;
        try {
            File file = new File(outputFile);
            if (!file.isAbsolute()) {
                file = Paths.get("").toAbsolutePath().resolve(outputFile).toFile();
            }
            try (FileWriter writer = new FileWriter(file)) {
                writer.write(content);
                count = content.split("\n").length;
            }
        } catch (IOException e) {
            System.err.println("Error writing to output file " + outputFile + ": " + e.getMessage());
        }
        return count;
    }
}